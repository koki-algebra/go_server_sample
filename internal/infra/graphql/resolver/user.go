package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"

	"github.com/google/uuid"
	"github.com/koki-algebra/go_server_sample/internal/infra/graphql/generated/model"
	"github.com/koki-algebra/go_server_sample/internal/usecase"
)

// SaveUser is the resolver for the saveUser field.
func (r *mutationResolver) SaveUser(ctx context.Context, input model.SaveInput) (*model.User, error) {
	saveInput := usecase.SaveUserInput{
		ID:   input.ID,
		Name: input.Name,
	}

	user, err := r.user.Save(ctx, saveInput)
	if err != nil {
		return nil, err
	}

	return convertUser(user), nil
}

// User is the resolver for the User field.
func (r *queryResolver) User(ctx context.Context, id uuid.UUID) (*model.User, error) {
	user, err := r.user.GetByID(ctx, id)
	if err != nil {
		return nil, err
	}

	return convertUser(user), nil
}
